{"meta":{"title":"darkmfj","subtitle":"learning is good!","description":null,"author":"darkmfj","url":"https://darkmfj.github.io"},"pages":[{"title":"About me","date":"2017-05-13T02:10:30.000Z","updated":"2017-05-31T16:03:31.000Z","comments":false,"path":"about/index.html","permalink":"https://darkmfj.github.io/about/index.html","excerpt":"","text":"Employment history2012 - PresentFormosa Tech. — .Net Software Engineer 2010 - 2012Tornado Tech. — .Net Software Engineer EducationFU JEN CATHOLIC UNIVERSITY (Sep 2004 - Jun 2008) Department of Information Management Skill Set OS Windows, Mac , Archlinux Programming Language C# , Java Framework NET Framework/ASP.NET MVC/WPFEntity FrameworkWindows MobileAndroid Database MS SQLServerOracleSQLite IDE Visual StudioAndroid StudioVS CodeVIM Source control Tools Git Languages Chinese: Mother tongue English: Good working knowledge Hobbies Traveling Reading"}],"posts":[{"title":"login archlinux by ssh","slug":"arch-login-by-ssh","date":"2017-05-31T16:26:21.000Z","updated":"2017-05-31T16:26:21.000Z","comments":true,"path":"2017/06/01/arch-login-by-ssh/","link":"","permalink":"https://darkmfj.github.io/2017/06/01/arch-login-by-ssh/","excerpt":"","text":"個人的使用情境需求大概如下：想要用mac透過ssh連線遠端我家中設置的一台 arch linux server PS:一般外面的雲端服務,如果有支援ssh登入,前端設置方式應該都差不多。 Server 端 (Archlinux 為例)1.安裝ssh在 arch terminal 環境下從官方庫安裝 openssh 1$ sudo pacman -S openssh 2.啟動 sshd - OpenSSH SSH daemon每次跑的時候12# 應該會要權限$ systemctl start sshd 弄成服務的方式,開機自動跑起來12# 應該會要權限$ systemctl enable sshd.service Client 端 (mac 為例)上述主機設置完成後，(如果沒有防火牆…阻擋的話) 應該可以很順利透過命令 ssh 連線到主機裡面。1$ ssh -p 22 darkmfj@192.168.1.1 如果想要不用每次登入都要輸入密碼的話,可以採用 匯入金鑰的方式 進行認證如下: 先看你的mac是不是已經有 公開的金鑰(一般會在 ~/.ssh 有檔案) 1$ ssh-copy-id darkmfj@192.168.1.1 第一次匯入到主機時,會問你帳號的密碼 成功登入後,之後就可以直接透過 1$ ssh darkmfj@192.168.1.1 另外可以發現在執行上面的 ssh-copy-id 後, 於 Archlinux 主機裡面, 會有 1234567$ ls ~/.ssh# 應該會出現下面authorized_keys$ cat ~/.ssh/authorized_keys# 會出現如下內容 剛認證放到主機的keyssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDY6V+QoxNoYHlixxxxxxx darkmfj@darkmfjMacBook-Pro.local ref: https://wiki.archlinux.org/index.php/Secure_Shell https://git-scm.com/book/en/v2/Git-on-the-Server-Generating-Your-SSH-Public-Key","categories":[],"tags":[{"name":"arch","slug":"arch","permalink":"https://darkmfj.github.io/tags/arch/"},{"name":"linux","slug":"linux","permalink":"https://darkmfj.github.io/tags/linux/"},{"name":"ssh","slug":"ssh","permalink":"https://darkmfj.github.io/tags/ssh/"}]},{"title":"golang install for mac","slug":"golang-install-mac","date":"2017-04-22T13:43:59.000Z","updated":"2017-04-22T13:43:59.000Z","comments":true,"path":"2017/04/22/golang-install-mac/","link":"","permalink":"https://darkmfj.github.io/2017/04/22/golang-install-mac/","excerpt":"","text":"安裝 golang 在mac 上 官網安裝步驟 1.下載安裝包安裝來源 golang 1.8.1mac 可直接下載 pkg,透過介面安裝 2. $GOPATH$GOPATH 可以設置你的worksapce 存放位置。 3.設定 Golang 環境變數 for zsh.zshrc1234567891011# 在 zshrc 設定檔後面增加如下面的設置 , 這樣使用 zsh shell 時,設定才吃的進去。 # 將 golang workspace 設定在 $HOME/go ,可改成你喜歡的。export GOPATH=$HOME/goexport GOROOT=/usr/local/go/bin# 當安裝其他套件時,才能直接下 命令執行export PATH=$PATH:$GOPATH/bin# 因有一些 預設package是放在一開始安裝的位置 /usr/local/go/bin# EX: go,godoc,gofmt...等export PATH=$PATH:$GOROOT/bin ps. go的預設安裝位置可能會因為安裝的方式不同,路徑也有可能不同,建議可以裝完後透過 where go 查看實際路徑 4. go env透過 go env 的命令 可以查看目前 go 相關設置的環境變數123456789101112131415shell&gt; go env## resultGOARCH=\"amd64\"GOBIN=\"/Users/&#123;user&#125;/go/bin\"GOEXE=\"\"GOHOSTARCH=\"amd64\"GOHOSTOS=\"darwin\"GOOS=\"darwin\"GOPATH=\"/Users/&#123;user&#125;/go\"GORACE=\"\"GOROOT=\"/usr/local/go\"GOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"GCCGO=\"gccgo\"...","categories":[],"tags":[{"name":"golang","slug":"golang","permalink":"https://darkmfj.github.io/tags/golang/"}]},{"title":"andorid studio shortcut - must know","slug":"andorid-studio-shortcut","date":"2017-04-12T13:41:49.000Z","updated":"2017-04-12T13:48:11.000Z","comments":true,"path":"2017/04/12/andorid-studio-shortcut/","link":"","permalink":"https://darkmfj.github.io/2017/04/12/andorid-studio-shortcut/","excerpt":"","text":"Star Name Shortcut Comment ★★★★ Parameter info (within method call arguments) Ctrl+P","categories":[],"tags":[{"name":"android","slug":"android","permalink":"https://darkmfj.github.io/tags/android/"},{"name":"shortcut","slug":"shortcut","permalink":"https://darkmfj.github.io/tags/shortcut/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-04-11T15:38:03.000Z","updated":"2017-04-11T15:38:03.000Z","comments":true,"path":"2017/04/11/hello-world/","link":"","permalink":"https://darkmfj.github.io/2017/04/11/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}